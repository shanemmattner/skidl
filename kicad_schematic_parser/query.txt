The following files are part of a software project:
This collection of files for a circuit design tool includes Python scripts and KiCad schematic files.

Core Files:
- kiutils_test.py: Python script for analyzing KiCad schematic files
- labels_testing.kicad_sch: Example KiCad schematic top level file that has labels connected to each other
- labels_testing_output.txt: Output file generated by kiutils_test.py for a KiCad schematic file


This logic works well but needs to be refactored to handle more complex cases.  I recently implemented logic to combine labels and it has a few bugs.
:
- R12 pin 2 is not connected to anything, it should be connected to 3v3_monitor or divider_2
- divider_1 should be connected to 5v_monitor, which means J3 pin 3 should be connected to 5v_monitor
- divider_2 should be connected to 3v3_monitor, which means J3 pin 4 should be connected to 3v3_monitor
- What does it mean when the output file says "Merged from nets:"?  I do not see the net mentioned.  For example, R12 Pin 2 is said to merged from nets NET_9, but NET_9 is not listed anywhere else

For reference, in the output file attached:
- `lbael_test_power1` is connected to +5v so it should take on that net name when connecting to other parts
- `label_test_power4` is connected to `label_test_power1` so it should take on the net name of `label_test_power1`, which will be +5v after conversion
- `label_test_power3` is connected to GND so it should take on that net name when connecting to other parts
- `divider_2` connects to `3v3_monitor` hierarchical label so it should take on the net name of `3v3_monitor` which will be +3v3 after conversion

It is possible to have many different labels connected to each other, so the logic needs to be able to handle any combination of labels a pin might be attached to.

Keep the logic as simple as possible.  Increase the amount of data you are collecting and processing to make the logic more robust. ie if there are 5 labels
connected to eachother then perhaps a pin is listed 5 times in the output file, once for each label it is connected to.  This will make it easier and more robust.
We can refactor for more intelligent code later

Please ask questions if you need more information or examples


/* Begin of file: labels_testing.kicad_sch */
(kicad_sch
	(version 20231120)
	(generator "eeschema")
	(generator_version "8.0")
	(uuid "e38f0799-7450-4c18-bc89-64334815f60b")
	(paper "A4")
	(lib_symbols
		(symbol "Connector_Generic:Conn_01x04"
			(pin_names
				(offset 1.016) hide)
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "J"
				(at 0 5.08 0)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Value" "Conn_01x04"
				(at 0 -7.62 0)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Footprint" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" "~"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "Generic connector, single row, 01x04, script generated (kicad-library-utils/schlib/autogen/connector/)"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "connector"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_fp_filters" "Connector*:*_1x??_*"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "Conn_01x04_1_1"
				(rectangle
					(start -1.27 -4.953)
					(end 0 -5.207)
					(stroke
						(width 0.1524)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(rectangle
					(start -1.27 -2.413)
					(end 0 -2.667)
					(stroke
						(width 0.1524)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(rectangle
					(start -1.27 0.127)
					(end 0 -0.127)
					(stroke
						(width 0.1524)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(rectangle
					(start -1.27 2.667)
					(end 0 2.413)
					(stroke
						(width 0.1524)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(rectangle
					(start -1.27 3.81)
					(end 1.27 -6.35)
					(stroke
						(width 0.254)
						(type default)
					)
					(fill
						(type background)
					)
				)
				(pin passive line
					(at -5.08 2.54 0)
					(length 3.81)
					(name "Pin_1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin passive line
					(at -5.08 0 0)
					(length 3.81)
					(name "Pin_2"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "2"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin passive line
					(at -5.08 -2.54 0)
					(length 3.81)
					(name "Pin_3"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "3"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin passive line
					(at -5.08 -5.08 0)
					(length 3.81)
					(name "Pin_4"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "4"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
		(symbol "Device:C"
			(pin_numbers hide)
			(pin_names
				(offset 0.254)
			)
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "C"
				(at 0.635 2.54 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(justify left)
				)
			)
			(property "Value" "C"
				(at 0.635 -2.54 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(justify left)
				)
			)
			(property "Footprint" ""
				(at 0.9652 -3.81 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" "~"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "Unpolarized capacitor"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "cap capacitor"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_fp_filters" "C_*"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "C_0_1"
				(polyline
					(pts
						(xy -2.032 -0.762) (xy 2.032 -0.762)
					)
					(stroke
						(width 0.508)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(polyline
					(pts
						(xy -2.032 0.762) (xy 2.032 0.762)
					)
					(stroke
						(width 0.508)
						(type default)
					)
					(fill
						(type none)
					)
				)
			)
			(symbol "C_1_1"
				(pin passive line
					(at 0 3.81 270)
					(length 2.794)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin passive line
					(at 0 -3.81 90)
					(length 2.794)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "2"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
		(symbol "Device:R"
			(pin_numbers hide)
			(pin_names
				(offset 0)
			)
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "R"
				(at 2.032 0 90)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Value" "R"
				(at 0 0 90)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Footprint" ""
				(at -1.778 0 90)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" "~"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "Resistor"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "R res resistor"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_fp_filters" "R_*"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "R_0_1"
				(rectangle
					(start -1.016 -2.54)
					(end 1.016 2.54)
					(stroke
						(width 0.254)
						(type default)
					)
					(fill
						(type none)
					)
				)
			)
			(symbol "R_1_1"
				(pin passive line
					(at 0 3.81 270)
					(length 1.27)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin passive line
					(at 0 -3.81 90)
					(length 1.27)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "2"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
		(symbol "Regulator_Linear:NCP1117-3.3_SOT223"
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "U"
				(at -3.81 3.175 0)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Value" "NCP1117-3.3_SOT223"
				(at 0 3.175 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(justify left)
				)
			)
			(property "Footprint" "Package_TO_SOT_SMD:SOT-223-3_TabPin2"
				(at 0 5.08 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" "http://www.onsemi.com/pub_link/Collateral/NCP1117-D.PDF"
				(at 2.54 -6.35 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "1A Low drop-out regulator, Fixed Output 3.3V, SOT-223"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "REGULATOR LDO 3.3V"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_fp_filters" "SOT?223*TabPin2*"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "NCP1117-3.3_SOT223_0_1"
				(rectangle
					(start -5.08 -5.08)
					(end 5.08 1.905)
					(stroke
						(width 0.254)
						(type default)
					)
					(fill
						(type background)
					)
				)
			)
			(symbol "NCP1117-3.3_SOT223_1_1"
				(pin power_in line
					(at 0 -7.62 90)
					(length 2.54)
					(name "GND"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin power_out line
					(at 7.62 0 180)
					(length 2.54)
					(name "VO"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "2"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
				(pin power_in line
					(at -7.62 0 0)
					(length 2.54)
					(name "VI"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "3"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
		(symbol "power:+3V3"
			(power)
			(pin_numbers hide)
			(pin_names
				(offset 0) hide)
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "#PWR"
				(at 0 -3.81 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Value" "+3V3"
				(at 0 3.556 0)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Footprint" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "Power symbol creates a global label with name \"+3V3\""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "global power"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "+3V3_0_1"
				(polyline
					(pts
						(xy -0.762 1.27) (xy 0 2.54)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(polyline
					(pts
						(xy 0 0) (xy 0 2.54)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(polyline
					(pts
						(xy 0 2.54) (xy 0.762 1.27)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
			)
			(symbol "+3V3_1_1"
				(pin power_in line
					(at 0 0 90)
					(length 0)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
		(symbol "power:+5V"
			(power)
			(pin_numbers hide)
			(pin_names
				(offset 0) hide)
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "#PWR"
				(at 0 -3.81 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Value" "+5V"
				(at 0 3.556 0)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Footprint" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "Power symbol creates a global label with name \"+5V\""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "global power"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "+5V_0_1"
				(polyline
					(pts
						(xy -0.762 1.27) (xy 0 2.54)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(polyline
					(pts
						(xy 0 0) (xy 0 2.54)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
				(polyline
					(pts
						(xy 0 2.54) (xy 0.762 1.27)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
			)
			(symbol "+5V_1_1"
				(pin power_in line
					(at 0 0 90)
					(length 0)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
		(symbol "power:GND"
			(power)
			(pin_numbers hide)
			(pin_names
				(offset 0) hide)
			(exclude_from_sim no)
			(in_bom yes)
			(on_board yes)
			(property "Reference" "#PWR"
				(at 0 -6.35 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Value" "GND"
				(at 0 -3.81 0)
				(effects
					(font
						(size 1.27 1.27)
					)
				)
			)
			(property "Footprint" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Datasheet" ""
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(property "ki_keywords" "global power"
				(at 0 0 0)
				(effects
					(font
						(size 1.27 1.27)
					)
					(hide yes)
				)
			)
			(symbol "GND_0_1"
				(polyline
					(pts
						(xy 0 0) (xy 0 -1.27) (xy 1.27 -1.27) (xy 0 -2.54) (xy -1.27 -1.27) (xy 0 -1.27)
					)
					(stroke
						(width 0)
						(type default)
					)
					(fill
						(type none)
					)
				)
			)
			(symbol "GND_1_1"
				(pin power_in line
					(at 0 0 270)
					(length 0)
					(name "~"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
					(number "1"
						(effects
							(font
								(size 1.27 1.27)
							)
						)
					)
				)
			)
		)
	)
	(junction
		(at 88.9 95.25)
		(diameter 0)
		(color 0 0 0 0)
		(uuid "091302ce-f2af-41dd-ab36-c6ba0a412ae4")
	)
	(junction
		(at 99.06 68.58)
		(diameter 0)
		(color 0 0 0 0)
		(uuid "3d02f3ea-eb6a-4d2d-94be-3e6ad3a464ad")
	)
	(junction
		(at 147.32 95.25)
		(diameter 0)
		(color 0 0 0 0)
		(uuid "462946ae-0664-42b0-8f80-4092f645c4f6")
	)
	(junction
		(at 133.35 68.58)
		(diameter 0)
		(color 0 0 0 0)
		(uuid "84a54e2f-51ca-46f0-8c9f-f43f2e496afc")
	)
	(junction
		(at 142.24 95.25)
		(diameter 0)
		(color 0 0 0 0)
		(uuid "93821503-4e21-4d7d-8ccb-14e308194564")
	)
	(wire
		(pts
			(xy 88.9 88.9) (xy 88.9 95.25)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "0ac039b9-3bfa-49d2-868d-3b4d6c4d2c8a")
	)
	(wire
		(pts
			(xy 146.05 88.9) (xy 142.24 88.9)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "1192f5cc-6c3c-4237-b4cd-edc9be3057c0")
	)
	(wire
		(pts
			(xy 156.21 57.15) (xy 74.93 57.15)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "15b04b05-c629-4d2f-8cdc-f4f6eac25cfe")
	)
	(wire
		(pts
			(xy 88.9 95.25) (xy 88.9 99.06)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "1da09caf-f2b0-4e3a-8da8-2a46df56bf09")
	)
	(wire
		(pts
			(xy 146.05 68.58) (xy 133.35 68.58)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "259ebf91-2e0b-473f-9b6d-195d051379b9")
	)
	(wire
		(pts
			(xy 142.24 91.44) (xy 146.05 91.44)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "31384a96-fe4e-4328-9c4c-b07691ffcd54")
	)
	(wire
		(pts
			(xy 201.93 130.81) (xy 195.58 130.81)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "321a3af1-8d93-4610-9f4b-8117cbb42e8b")
	)
	(wire
		(pts
			(xy 146.05 91.44) (xy 146.05 93.98)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "38e121c7-8e0c-47c4-a78a-5e89b04e3c1b")
	)
	(wire
		(pts
			(xy 146.05 93.98) (xy 142.24 93.98)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "3c65f891-533f-4648-9324-e075130c3d5f")
	)
	(wire
		(pts
			(xy 88.9 68.58) (xy 88.9 81.28)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "417ade74-f335-4ce0-b6a6-fe30b8a77f38")
	)
	(wire
		(pts
			(xy 195.58 139.7) (xy 203.2 139.7)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "56ff0bce-f0f1-427f-a4fb-14e8b872f619")
	)
	(wire
		(pts
			(xy 139.7 95.25) (xy 139.7 99.06)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "60aae8a8-c92b-4f57-91a5-f7b5d277a944")
	)
	(wire
		(pts
			(xy 99.06 80.01) (xy 99.06 76.2)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "6e608ff6-d943-486a-89b4-a3bdb174db0e")
	)
	(wire
		(pts
			(xy 142.24 95.25) (xy 147.32 95.25)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "7e8c2570-8aa3-4382-a6c9-e098844aef9a")
	)
	(wire
		(pts
			(xy 142.24 88.9) (xy 142.24 91.44)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "89fa107b-3348-4972-ac2c-68f9a6369a2c")
	)
	(wire
		(pts
			(xy 146.05 68.58) (xy 146.05 81.28)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "9fe64d97-dfbd-4245-855d-15a98fc5f01e")
	)
	(wire
		(pts
			(xy 195.58 125.73) (xy 201.93 125.73)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "c158a9b3-8364-40de-9957-92c63b6dd2c4")
	)
	(wire
		(pts
			(xy 88.9 68.58) (xy 99.06 68.58)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "c2560154-0418-4da9-afc1-ca8583e810fc")
	)
	(wire
		(pts
			(xy 133.35 80.01) (xy 133.35 76.2)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "c7af12b7-ce76-402c-86c1-59cc6567d323")
	)
	(wire
		(pts
			(xy 123.19 68.58) (xy 133.35 68.58)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "cc52c9fe-7afd-4645-b74f-7f675af5ff58")
	)
	(wire
		(pts
			(xy 88.9 95.25) (xy 105.41 95.25)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "cc9e3d10-f33d-45a0-8e43-54c1401bbc22")
	)
	(wire
		(pts
			(xy 142.24 93.98) (xy 142.24 95.25)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "d163c942-c0bb-41fb-908f-94760d4a6108")
	)
	(wire
		(pts
			(xy 195.58 130.81) (xy 195.58 132.08)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "d38fd59b-7212-4320-ae52-32da7c125040")
	)
	(wire
		(pts
			(xy 99.06 68.58) (xy 107.95 68.58)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "e083f84d-a19e-4fb2-94ca-52fae2be01e3")
	)
	(wire
		(pts
			(xy 74.93 57.15) (xy 74.93 121.92)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "e2e5f823-dea8-40c8-af2d-a3355326a8a1")
	)
	(wire
		(pts
			(xy 74.93 121.92) (xy 147.32 121.92)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "e46b9517-41f8-499f-83d6-ec4ecfba27bd")
	)
	(wire
		(pts
			(xy 195.58 118.11) (xy 201.93 118.11)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "ed368145-51db-48cf-b408-ce8c748975f5")
	)
	(wire
		(pts
			(xy 139.7 95.25) (xy 142.24 95.25)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "effaaf0d-0c35-439e-aefd-61ee224e04c6")
	)
	(wire
		(pts
			(xy 115.57 80.01) (xy 115.57 76.2)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "f0a2cb93-e5ab-4121-8f64-7e43dfd377a2")
	)
	(wire
		(pts
			(xy 147.32 95.25) (xy 147.32 121.92)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "f8011d04-792d-4147-a838-adc7bc78e4e6")
	)
	(wire
		(pts
			(xy 161.29 88.9) (xy 156.21 88.9)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "f8ebfd85-1668-4d0a-a0af-96480b4ca8e2")
	)
	(wire
		(pts
			(xy 156.21 88.9) (xy 156.21 57.15)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "fe48591f-0e51-426a-9572-7b286b814028")
	)
	(wire
		(pts
			(xy 147.32 95.25) (xy 156.21 95.25)
		)
		(stroke
			(width 0)
			(type default)
		)
		(uuid "ffb2bdbf-3d5d-4f61-931b-451ce1a4be74")
	)
	(label "label_test_power3"
		(at 193.04 99.06 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "59e261e2-f00b-473f-8297-9aa7efe2faeb")
	)
	(label "divider_1"
		(at 95.25 95.25 0)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify left bottom)
		)
		(uuid "6167b605-9e8d-4177-8903-dc703687ff3e")
	)
	(label "label_test_power2"
		(at 195.58 125.73 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "6fa49a0e-12d6-47e2-a708-7dc94a35d64d")
	)
	(label "divider_1"
		(at 193.04 77.47 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "7c80573e-e2f1-4a70-bab3-e61c495ffe59")
	)
	(label "label_test_power1"
		(at 195.58 118.11 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "82b3eeaa-5d12-4dce-831e-3c12877d6ce5")
	)
	(label "label_test_power4"
		(at 193.04 101.6 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "84678562-db6f-468a-9b3c-0ab6f5e4ff82")
	)
	(label "divider_2"
		(at 161.29 88.9 0)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify left bottom)
		)
		(uuid "89eb2c61-b41a-4391-8265-608b13690157")
	)
	(label "label_test_power3"
		(at 195.58 132.08 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "a72dfa34-594f-4f27-aafd-c8597b7ca58a")
	)
	(label "label_test_power4"
		(at 195.58 139.7 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "a72ee850-273c-47d5-a88a-c330e1c170a6")
	)
	(label "label_test_power2"
		(at 193.04 96.52 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "b986df15-d3af-46a6-9c58-2a686ae2efea")
	)
	(label "label_test_power1"
		(at 193.04 93.98 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "ee0eeef0-505e-4901-9403-38e867fbd236")
	)
	(label "label_test_power1"
		(at 203.2 139.7 0)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify left bottom)
		)
		(uuid "ee63dd05-05ad-4c46-8e72-3ea7c6dd5893")
	)
	(label "divider_2"
		(at 193.04 80.01 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right bottom)
		)
		(uuid "f166d84d-6ba8-40bf-8fbf-4b0abd61c258")
	)
	(hierarchical_label "5v_monitor"
		(shape input)
		(at 193.04 72.39 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right)
		)
		(uuid "3088ff81-d4e8-4d3c-9f02-31ca5236208f")
	)
	(hierarchical_label "5v_monitor"
		(shape input)
		(at 105.41 95.25 0)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify left)
		)
		(uuid "3c5c69be-c728-4d7c-af6b-352dd30f1c1f")
	)
	(hierarchical_label "3v3_monitor"
		(shape input)
		(at 156.21 95.25 0)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify left)
		)
		(uuid "4e2938bc-d829-4ed9-a800-393282e8f295")
	)
	(hierarchical_label "3v3_monitor"
		(shape input)
		(at 193.04 74.93 180)
		(fields_autoplaced yes)
		(effects
			(font
				(size 1.27 1.27)
			)
			(justify right)
		)
		(uuid "c9b703f0-032a-4c02-ac28-5002359a55b2")
	)
	(symbol
		(lib_id "Device:C")
		(at 133.35 72.39 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "01637755-365d-4f49-aa02-d1c355073d9e")
		(property "Reference" "C11"
			(at 137.16 71.1199 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "C"
			(at 137.16 73.6599 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" "Capacitor_SMD:C_0603_1608Metric"
			(at 134.3152 76.2 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 133.35 72.39 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Unpolarized capacitor"
			(at 133.35 72.39 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "7908981f-6e96-47b1-b25d-84a9d1aa1542")
		)
		(pin "1"
			(uuid "26a61810-7750-4b1b-b2b0-248f58eb306b")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "C11")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Regulator_Linear:NCP1117-3.3_SOT223")
		(at 115.57 68.58 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "07041e10-8588-41a0-a957-8485efbacd44")
		(property "Reference" "U4"
			(at 115.57 62.23 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Value" "NCP1117-3.3_SOT223"
			(at 115.57 64.77 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Footprint" "Package_TO_SOT_SMD:SOT-223-3_TabPin2"
			(at 115.57 63.5 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "http://www.onsemi.com/pub_link/Collateral/NCP1117-D.PDF"
			(at 118.11 74.93 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "1A Low drop-out regulator, Fixed Output 3.3V, SOT-223"
			(at 115.57 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "a68f4784-243b-42e5-8dbb-df58ded9861b")
		)
		(pin "3"
			(uuid "eb9dacab-9cdf-4a20-b0ab-67437f44b083")
		)
		(pin "2"
			(uuid "8b9e1d90-2da6-4bf2-8919-501045ffc70c")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "U4")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:+5V")
		(at 201.93 118.11 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "1b8abf45-c3c6-45c5-a7a3-5715b02a23ff")
		(property "Reference" "#PWR034"
			(at 201.93 121.92 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "+5V"
			(at 201.93 113.03 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 201.93 118.11 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 201.93 118.11 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"+5V\""
			(at 201.93 118.11 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "d7462d71-5405-4413-8628-cfa911b0dfbe")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR034")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 88.9 106.68 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "32304e1c-ad61-4b65-9c0c-93270b1008bd")
		(property "Reference" "#PWR025"
			(at 88.9 113.03 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 88.9 111.76 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 88.9 106.68 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 88.9 106.68 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 88.9 106.68 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "cde402f7-f5f6-4464-b78d-36e1b4d38e44")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR025")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:R")
		(at 146.05 85.09 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "33f35048-039d-4bb6-ba6c-0c72aa5e448c")
		(property "Reference" "R12"
			(at 148.59 83.8199 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "R"
			(at 148.59 86.3599 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" "Resistor_SMD:R_0603_1608Metric"
			(at 144.272 85.09 90)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 146.05 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Resistor"
			(at 146.05 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "15dff5b5-e4bc-4a24-b289-bc08018479e1")
		)
		(pin "1"
			(uuid "cead63bb-1a93-432e-bb3d-42dd0e04953e")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "R12")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 201.93 130.81 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "349d86b0-1e5e-4714-b47f-9f9760cf4f8c")
		(property "Reference" "#PWR036"
			(at 201.93 137.16 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 201.93 135.89 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 201.93 130.81 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 201.93 130.81 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 201.93 130.81 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "d0626210-2e2d-4a6a-9e02-ea39051e915c")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR036")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:+5V")
		(at 99.06 68.58 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "467119a0-e5d4-4e09-ab99-91780fc6be09")
		(property "Reference" "#PWR026"
			(at 99.06 72.39 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "+5V"
			(at 99.06 63.5 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 99.06 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 99.06 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"+5V\""
			(at 99.06 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "1f80dae6-62f3-466d-917b-2384e0ee8c25")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR026")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 139.7 106.68 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "4c272de5-b62c-4fc3-94b2-7fbef9da43a2")
		(property "Reference" "#PWR032"
			(at 139.7 113.03 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 139.7 111.76 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 139.7 106.68 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 139.7 106.68 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 139.7 106.68 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "757a4441-6218-4878-bcab-830f6df93147")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR032")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Connector_Generic:Conn_01x04")
		(at 198.12 74.93 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "4e2c03b5-543d-4262-acaa-3c369a69d7fb")
		(property "Reference" "J3"
			(at 200.66 74.9299 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "Conn_01x04"
			(at 200.66 77.4699 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" ""
			(at 198.12 74.93 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 198.12 74.93 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Generic connector, single row, 01x04, script generated (kicad-library-utils/schlib/autogen/connector/)"
			(at 198.12 74.93 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "3"
			(uuid "bad1e1f4-2ce4-4899-bb20-fd47d2630fb2")
		)
		(pin "2"
			(uuid "97db0634-3bdc-4073-8528-a6e5bd00baa8")
		)
		(pin "4"
			(uuid "387ff772-8ad5-46a3-a946-0d376b00545f")
		)
		(pin "1"
			(uuid "43f45299-921a-46cb-b70a-dc6b8e02e26b")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "J3")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 99.06 80.01 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "5cd0ce86-9338-4a25-9f01-1cdd6bed7f84")
		(property "Reference" "#PWR027"
			(at 99.06 86.36 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 99.06 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Footprint" ""
			(at 99.06 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 99.06 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 99.06 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "bab84505-b9d5-44a0-98a7-ab55bae5b19c")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR027")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Connector_Generic:Conn_01x04")
		(at 198.12 96.52 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "62e6f498-7c88-4521-ad36-6b27b6e8851c")
		(property "Reference" "J4"
			(at 200.66 96.5199 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "Conn_01x04"
			(at 200.66 99.0599 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" ""
			(at 198.12 96.52 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 198.12 96.52 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Generic connector, single row, 01x04, script generated (kicad-library-utils/schlib/autogen/connector/)"
			(at 198.12 96.52 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "3"
			(uuid "6a4e815a-cb20-4fce-b9b1-4fbcc896629b")
		)
		(pin "2"
			(uuid "fafaa7d9-f2b7-4265-8248-687c27f4665e")
		)
		(pin "4"
			(uuid "c130b4f2-74eb-4f32-922f-b7fa35a7ad6b")
		)
		(pin "1"
			(uuid "3900c1b0-a4a9-468a-8ce6-a3dc5c029df2")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "J4")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:R")
		(at 88.9 85.09 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "6dd0dfc9-44e3-4c26-b23d-6d0abcccfb6e")
		(property "Reference" "R9"
			(at 91.44 83.8199 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "R"
			(at 91.44 86.3599 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" "Resistor_SMD:R_0603_1608Metric"
			(at 87.122 85.09 90)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 88.9 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Resistor"
			(at 88.9 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "f1bf35d5-2982-4dd4-b99c-7a9e4bcefd74")
		)
		(pin "1"
			(uuid "6723ccaa-a7e9-48c0-b473-765b447d6d28")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "R9")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:+3V3")
		(at 201.93 125.73 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "78c2b9c9-8157-4c71-add6-8d6ecc1c4c17")
		(property "Reference" "#PWR035"
			(at 201.93 129.54 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "+3V3"
			(at 201.93 120.65 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 201.93 125.73 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 201.93 125.73 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"+3V3\""
			(at 201.93 125.73 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "f0d26b88-b331-4cb4-97e3-80e4b2b3f4d0")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR035")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:R")
		(at 88.9 102.87 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "852fb182-3aba-48df-a2a8-a4cc9b4ebd53")
		(property "Reference" "R10"
			(at 91.44 101.5999 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "R"
			(at 91.44 104.1399 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" "Resistor_SMD:R_0603_1608Metric"
			(at 87.122 102.87 90)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 88.9 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Resistor"
			(at 88.9 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "1b6ad528-60a2-467b-8987-17a83164b69f")
		)
		(pin "1"
			(uuid "2a460a97-854a-4c4d-84a1-33d1b87a2c83")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "R10")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:C")
		(at 99.06 72.39 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "8fc3b207-f507-42ee-9674-16fb4fd1dc8b")
		(property "Reference" "C9"
			(at 102.87 71.1199 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "C"
			(at 102.87 73.6599 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" "Capacitor_SMD:C_0603_1608Metric"
			(at 100.0252 76.2 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 99.06 72.39 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Unpolarized capacitor"
			(at 99.06 72.39 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "878b8176-7ab5-437f-9621-ed52be60a342")
		)
		(pin "1"
			(uuid "3e16b9fa-d219-441c-8890-6215cf0b6504")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "C9")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 156.21 102.87 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "a4f7f654-3563-45f5-a414-c2410ef22af1")
		(property "Reference" "#PWR033"
			(at 156.21 109.22 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 156.21 107.95 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 156.21 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 156.21 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 156.21 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "b47c05c0-801f-47c8-a710-f902891db781")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR033")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:C")
		(at 156.21 99.06 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "c2038b61-5050-46e4-b143-30ad826e7f9a")
		(property "Reference" "C12"
			(at 160.02 97.7899 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "C"
			(at 160.02 100.3299 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" ""
			(at 157.1752 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 156.21 99.06 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Unpolarized capacitor"
			(at 156.21 99.06 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "b2e623d3-c61a-49ce-a87c-fb2ffc6456ec")
		)
		(pin "1"
			(uuid "be79f4a2-85f8-4646-ad06-5ded9856b7a3")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "C12")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 105.41 102.87 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "c46b18c1-1e72-4bd1-9feb-89aeaa69e241")
		(property "Reference" "#PWR028"
			(at 105.41 109.22 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 105.41 107.95 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 105.41 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 105.41 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 105.41 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "81707287-2e49-4754-a723-52d93bc414fa")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR028")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 133.35 80.01 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "cb60bb6a-c27e-4e81-a4f8-ba67aa6e01ea")
		(property "Reference" "#PWR031"
			(at 133.35 86.36 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 133.35 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Footprint" ""
			(at 133.35 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 133.35 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 133.35 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "bffd6be1-e7a2-4d6c-88d6-899703b42113")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR031")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:+3V3")
		(at 133.35 68.58 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "d6454ff4-fdc9-43e4-9142-81f278f71358")
		(property "Reference" "#PWR030"
			(at 133.35 72.39 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "+3V3"
			(at 133.35 63.5 0)
			(effects
				(font
					(size 1.27 1.27)
				)
			)
		)
		(property "Footprint" ""
			(at 133.35 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 133.35 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"+3V3\""
			(at 133.35 68.58 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "04b942bd-d8bc-4b0b-8a81-c1dc0e8cbd05")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR030")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:C")
		(at 105.41 99.06 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "dfd6e6f4-2b95-461f-8351-33a8ad09426d")
		(property "Reference" "C10"
			(at 109.22 97.7899 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "C"
			(at 109.22 100.3299 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" ""
			(at 106.3752 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 105.41 99.06 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Unpolarized capacitor"
			(at 105.41 99.06 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "04c1aaba-88c6-4610-9459-55140b4d4693")
		)
		(pin "1"
			(uuid "0748af65-4476-450a-8b4c-5e809ba972c5")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "C10")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "power:GND")
		(at 115.57 80.01 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "e97e338f-fe3f-43fd-8924-024841153ec3")
		(property "Reference" "#PWR029"
			(at 115.57 86.36 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Value" "GND"
			(at 115.57 85.09 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Footprint" ""
			(at 115.57 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" ""
			(at 115.57 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Power symbol creates a global label with name \"GND\" , ground"
			(at 115.57 80.01 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "1"
			(uuid "bd8e3a95-d531-4ed9-ac10-7b8998b663de")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "#PWR029")
					(unit 1)
				)
			)
		)
	)
	(symbol
		(lib_id "Device:R")
		(at 139.7 102.87 0)
		(unit 1)
		(exclude_from_sim no)
		(in_bom yes)
		(on_board yes)
		(dnp no)
		(fields_autoplaced yes)
		(uuid "efdfb89c-a7b4-4748-93c5-a112d13ce82c")
		(property "Reference" "R11"
			(at 142.24 101.5999 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Value" "R"
			(at 142.24 104.1399 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(justify left)
			)
		)
		(property "Footprint" "Resistor_SMD:R_0603_1608Metric"
			(at 137.922 102.87 90)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Datasheet" "~"
			(at 139.7 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(property "Description" "Resistor"
			(at 139.7 102.87 0)
			(effects
				(font
					(size 1.27 1.27)
				)
				(hide yes)
			)
		)
		(pin "2"
			(uuid "b393f9b7-ae24-4bfe-8452-1b71c0f81700")
		)
		(pin "1"
			(uuid "e6b79945-7832-4c69-b2b2-27a725461814")
		)
		(instances
			(project "example_kicad_project"
				(path "/139408cf-b4ac-4ccf-8751-afbb6def1f13/90ceafd8-bd42-443d-a247-0a105a926b0c"
					(reference "R11")
					(unit 1)
				)
			)
		)
	)
)

/* End of file: labels_testing.kicad_sch */

/* Begin of file: kiutils_test.py */
from kiutils.schematic import Schematic
import math
import sys


def calculate_pin_position(component_position, pin_position, component_angle=0):
    """
    Calculate absolute pin position based on component position and relative pin position
    """
    angle_rad = math.radians(component_angle)
    
    # Apply rotation
    rotated_x = pin_position.X * math.cos(angle_rad) - pin_position.Y * math.sin(angle_rad)
    rotated_y = pin_position.X * math.sin(angle_rad) + pin_position.Y * math.cos(angle_rad)
    
    # Add component position
    absolute_x = component_position.X + rotated_x
    absolute_y = component_position.Y - rotated_y
    
    return (absolute_x, absolute_y)

def find_symbol_definition(schematic, lib_nickname, entry_name):
    """
    Find symbol definition from library symbols
    """
    for symbol in schematic.libSymbols:
        if (symbol.libraryNickname == lib_nickname and 
            symbol.entryName == entry_name):
            return symbol
    return None

def get_component_pins(schematic):
    """
    Extract and calculate absolute positions for all component pins in the schematic
    """
    component_pins = {}
    
    for component in schematic.schematicSymbols:
        symbol_def = find_symbol_definition(
            schematic, 
            component.libraryNickname, 
            component.entryName
        )
        
        if not symbol_def:
            continue
            
        pins = []
        for unit in symbol_def.units:
            if hasattr(unit, 'pins'):
                pins.extend(unit.pins)
        
        component_pins[component.properties[0].value] = []
        
        for pin in pins:
            absolute_pos = calculate_pin_position(
                component.position,
                pin.position,
                component.position.angle
            )
            pin_info = {
                'pin_number': pin.number,
                'pin_name': pin.name,
                'absolute_position': absolute_pos,
                'electrical_type': pin.electricalType,
                'alternatePins': [
                    {
                        'pinName': alt.pinName,
                        'electricalType': alt.electricalType
                    } for alt in pin.alternatePins
                ] if hasattr(pin, 'alternatePins') else []
            }
            component_pins[component.properties[0].value].append(pin_info)
            
        component_pins[component.properties[0].value].sort(
            key=lambda x: int(x['pin_number'])
        )
    
    return component_pins

def get_wire_connections(schematic):
    """
    Extract wire connections from the schematic
    """
    wire_connections = []
    
    for item in schematic.graphicalItems:
        if hasattr(item, 'type') and item.type == 'wire':
            start_point = (float(item.points[0].X), float(item.points[0].Y))
            end_point = (float(item.points[1].X), float(item.points[1].Y))
            wire_connections.append((start_point, end_point))
    
    return wire_connections


def find_labels_for_position(position, labels, wire_connections, tolerance=0.01):
    """
    Enhanced label detection that checks all physically connected points
    """
    # Get all physically connected points
    connected_points = get_connected_points(position, wire_connections, tolerance=tolerance)
    
    found_labels = []
    
    # Check each connected point against all label types
    for point in connected_points:
        # Check power labels
        for label in labels['power']:
            if points_match(point, label['position'], tolerance):
                found_labels.append(('power', label['text']))
                
        # Check hierarchical labels  
        for label in labels['hierarchical']:
            if points_match(point, label['position'], tolerance):
                found_labels.append(('hierarchical', label['text']))
                
        # Check local labels
        for label in labels['local']:
            if points_match(point, label['position'], tolerance):
                found_labels.append(('local', label['text']))
                
    return list(set(found_labels))  # Remove duplicates


def are_points_connected(point1, point2, wire_connections, labels, tolerance=0.01):
    """
    Check if two points are connected either directly through wires or through shared labels.
    
    Args:
        point1: First point (x,y) tuple
        point2: Second point (x,y) tuple  
        wire_connections: List of wire connections
        labels: Dictionary of label information
        tolerance: Distance tolerance for point matching

    Returns:
        bool: True if points are connected, False otherwise
    """
    def points_match(p1, p2, tolerance=0.01):
        return (abs(p1[0] - p2[0]) <= tolerance and 
                abs(p1[1] - p2[1]) <= tolerance)
            
    def get_connected_points(start_pos, wire_list, visited=None, tolerance=0.01):
        """
        Find all points connected to start_pos through wires, recursively
        
        Args:
            start_pos: Starting point (x,y) tuple
            wire_list: List of wire connections
            visited: Set of already visited wire segments
            tolerance: Distance tolerance for point matching
            
        Returns:
            set: Set of all connected points
        """
        if visited is None:
            visited = set()
            
        # Convert point coordinates to 2-decimal precision for reliable matching
        start_pos = (round(start_pos[0], 2), round(start_pos[1], 2))
        connected_points = {start_pos}
        
        for wire in wire_list:
            wire_start = (round(wire[0][0], 2), round(wire[0][1], 2))
            wire_end = (round(wire[1][0], 2), round(wire[1][1], 2))
            
            wire_key = (wire_start, wire_end)
            if wire_key in visited:
                continue
                
            visited.add(wire_key)
            visited.add((wire_end, wire_start))  # Add both orientations
            
            # Check if this wire connects to our point
            if points_match(start_pos, wire_start, tolerance):
                connected_points.add(wire_end)
                connected_points.update(
                    get_connected_points(wire_end, wire_list, visited, tolerance)
                )
            elif points_match(start_pos, wire_end, tolerance):
                connected_points.add(wire_start)
                connected_points.update(
                    get_connected_points(wire_start, wire_list, visited, tolerance)
                )
                    
        return connected_points



    # Get all points connected to point1 and point2 through wires
    p1_connected = get_connected_points(point1, wire_connections)
    p2_connected = get_connected_points(point2, wire_connections)
    
    # Direct wire connection check
    if any(points_match(p1, p2, tolerance) for p1 in p1_connected for p2 in p2_connected):
        return True
        
    # Check connection through labels
    p1_labels = find_labels_for_position(point1, labels, wire_connections)
    p2_labels = find_labels_for_position(point2, labels, wire_connections)
    
    # Check for shared label connections
    for label1 in p1_labels:
        for label2 in p2_labels:
            # If both points connect to the same label name, they're connected
            if label1[1] == label2[1]:
                return True
                
    return False


from kiutils.schematic import Schematic
import math
import sys
import os

def parse_labels(schematic):
    """
    Parse different types of labels from the schematic
    """
    labels = {
        'local': [],
        'hierarchical': [],
        'power': []
    }
    
    # Parse local labels
    for label in schematic.labels:
        labels['local'].append({
            'text': label.text,
            'position': (label.position.X, label.position.Y),
            'angle': label.position.angle
        })
        
    # Parse hierarchical labels
    for label in schematic.hierarchicalLabels:
        labels['hierarchical'].append({
            'text': label.text,
            'shape': label.shape,  # input/output/bidirectional/etc
            'position': (label.position.X, label.position.Y),
            'angle': label.position.angle
        })
    
    # Parse power symbols
    for symbol in schematic.schematicSymbols:
        if symbol.libraryNickname == 'power':
            value_prop = next((prop for prop in symbol.properties if prop.key == 'Value'), None)
            if value_prop:
                labels['power'].append({
                    'text': value_prop.value,
                    'position': (symbol.position.X, symbol.position.Y),
                    'angle': symbol.position.angle
                })

    return labels

def points_match(p1, p2, tolerance=0.01):
    """Helper function to check if two points match within tolerance"""
    return (abs(p1[0] - p2[0]) <= tolerance and 
            abs(p1[1] - p2[1]) <= tolerance)


def get_connected_points(start_pos, wire_list, visited=None, tolerance=0.01):
    """
    Find all points connected to start_pos through wires, recursively
    
    Args:
        start_pos: Starting point (x,y) tuple
        wire_list: List of wire connections
        visited: Set of already visited wire segments
        tolerance: Distance tolerance for point matching
        
    Returns:
        set: Set of all connected points
    """
    if visited is None:
        visited = set()
        
    # Convert point coordinates to 2-decimal precision for reliable matching
    start_pos = (round(start_pos[0], 2), round(start_pos[1], 2))
    connected_points = {start_pos}
    
    for wire in wire_list:
        wire_start = (round(wire[0][0], 2), round(wire[0][1], 2))
        wire_end = (round(wire[1][0], 2), round(wire[1][1], 2))
        
        wire_key = (wire_start, wire_end)
        if wire_key in visited:
            continue
            
        visited.add(wire_key)
        visited.add((wire_end, wire_start))  # Add both orientations
        
        # Check if this wire connects to our point
        if points_match(start_pos, wire_start, tolerance):
            connected_points.add(wire_end)
            connected_points.update(
                get_connected_points(wire_end, wire_list, visited, tolerance)
            )
        elif points_match(start_pos, wire_end, tolerance):
            connected_points.add(wire_start)
            connected_points.update(
                get_connected_points(wire_start, wire_list, visited, tolerance)
            )
                
    return connected_points

def point_on_wire_segment(point, wire_start, wire_end, tolerance=0.01):
    """
    Check if a point lies on a wire segment
    """
    # Convert to 2 decimal precision for reliable comparison
    px, py = round(point[0], 2), round(point[1], 2)
    x1, y1 = round(wire_start[0], 2), round(wire_start[1], 2)
    x2, y2 = round(wire_end[0], 2), round(wire_end[1], 2)
    
    # Check if point is within the bounding box of the wire
    if not (min(x1, x2) - tolerance <= px <= max(x1, x2) + tolerance and
            min(y1, y2) - tolerance <= py <= max(y1, y2) + tolerance):
        return False
        
    # For vertical wires
    if abs(x1 - x2) < tolerance:
        return abs(px - x1) < tolerance
        
    # For horizontal wires
    if abs(y1 - y2) < tolerance:
        return abs(py - y1) < tolerance
        
    # For diagonal wires (if any)
    # Calculate distance from point to line
    numerator = abs((y2-y1)*px - (x2-x1)*py + x2*y1 - y2*x1)
    denominator = ((y2-y1)**2 + (x2-x1)**2)**0.5
    distance = numerator/denominator
    
    return distance < tolerance


def create_initial_nets(component_pins, wire_connections, labels):
    """
    Create initial nets with improved connection tracking
    """
    net_groups = {}
    next_id = 1
    point_to_net = {}  # Map points to their assigned net ID
    
    # First pass: Create nets for physically connected points
    for component, pins in component_pins.items():
        for pin in pins:
            pin_pos = pin['absolute_position']
            pin_pos_key = (round(pin_pos[0], 2), round(pin_pos[1], 2))
            
            # Get all physically connected points
            connected_points = get_connected_points(pin_pos, wire_connections)
            connected_point_keys = {(round(p[0], 2), round(p[1], 2)) for p in connected_points}
            
            # Find if any points are already assigned to a net
            existing_nets = set()
            for point_key in connected_point_keys:
                if point_key in point_to_net:
                    existing_nets.add(point_to_net[point_key])
            
            # If connected to existing net(s), merge into the first one
            if existing_nets:
                target_net_id = min(existing_nets)  # Use the lowest net ID
                net_groups[target_net_id]['pins'].append((component, pin))
                net_groups[target_net_id]['connected_points'].update(connected_points)
                
                # Update point mappings
                for point_key in connected_point_keys:
                    point_to_net[point_key] = target_net_id
                    
                # Merge other nets if multiple exist
                for other_net_id in existing_nets:
                    if other_net_id != target_net_id:
                        net_groups[target_net_id]['pins'].extend(net_groups[other_net_id]['pins'])
                        net_groups[target_net_id]['connected_points'].update(
                            net_groups[other_net_id]['connected_points'])
                        del net_groups[other_net_id]
            else:
                # Create new net
                net_id = f"NET_{next_id}"
                next_id += 1
                
                net_groups[net_id] = {
                    'pins': [(component, pin)],
                    'labels': [],
                    'connected_points': connected_points
                }
                
                # Map all points to this net
                for point_key in connected_point_keys:
                    point_to_net[point_key] = net_id
    
    # Second pass: Add label information
    for net_id, net_info in net_groups.items():
        # Find labels connected to any point in this net
        all_labels = []
        for point in net_info['connected_points']:
            point_labels = find_labels_for_position(point, labels, wire_connections)
            all_labels.extend(point_labels)
        net_info['labels'] = list(set(all_labels))
    
    return net_groups


def merge_connected_nets(net_groups):
    """
    Enhanced net merging with improved label handling and recursive connection search
    """
    def get_connected_nets(net_id, processed=None):
        if processed is None:
            processed = set()
            
        if net_id in processed:
            return set()
            
        connected = {net_id}
        processed.add(net_id)
        
        net_info = net_groups[net_id]
        
        # Check label connections including transitive connections
        # For example: if net1 has label1, net2 has label2, and label1 connects to label2,
        # then net1 and net2 should be connected
        net_labels = net_info['labels']
        for other_id, other_info in net_groups.items():
            if other_id in processed:
                continue
                
            other_labels = other_info['labels']
            
            # Check for direct label name matches
            for label1 in net_labels:
                for label2 in other_labels:
                    if label1[1] == label2[1]:  # Match on label name
                        connected.update(get_connected_nets(other_id, processed))
                        break
                        
        # Check point connections
        net_points = net_info['connected_points']
        for other_id, other_info in net_groups.items():
            if other_id in processed:
                continue
                
            other_points = other_info['connected_points']
            
            # Check if any points overlap
            if net_points.intersection(other_points):
                connected.update(get_connected_nets(other_id, processed))
                
        return connected

    # Build initial groups using recursive connection search
    merged_groups = []
    processed = set()
    
    for net_id in net_groups:
        if net_id in processed:
            continue
            
        group = get_connected_nets(net_id)
        if group:
            merged_groups.append(group)
            processed.update(group)

    # Create merged nets from groups
    merged_nets = {}
    for idx, group in enumerate(merged_groups, 1):
        merged_id = f"MERGED_NET_{idx}"
        merged_net = {
            'pins': [],
            'labels': [],
            'connected_points': set(),
            'source_nets': group
        }
        
        # Merge all information from grouped nets
        for net_id in group:
            net_info = net_groups[net_id]
            merged_net['pins'].extend(net_info['pins'])
            merged_net['labels'].extend(net_info['labels'])
            merged_net['connected_points'].update(net_info['connected_points'])
            
        # Remove duplicates
        merged_net['labels'] = list(set(merged_net['labels']))
        merged_nets[merged_id] = merged_net

    return merged_nets


def calculate_pin_connectivity(component_pins, wire_connections, labels):
    """
    Calculate connectivity between pins and labels with improved handling of multiple connections
    """
    # Create initial nets from physical connections
    initial_nets = create_initial_nets(component_pins, wire_connections, labels)
    
    # Merge connected nets
    merged_nets = merge_connected_nets(initial_nets)
    
    # Format the final netlist
    netlist = {}
    
    for net_id, net_info in merged_nets.items():
        # Group labels by type
        power_labels = []
        hier_labels = []
        local_labels = []
        
        for label_type, label_name in net_info['labels']:
            if label_type == 'power':
                power_labels.append(label_name)
            elif label_type == 'hierarchical':
                hier_labels.append(label_name)
            else:
                local_labels.append(label_name)
        
        # Choose primary net name based on any available label
        net_name = None
        if power_labels:
            net_name = power_labels[0]
        elif hier_labels:
            net_name = hier_labels[0]
        elif local_labels:
            net_name = local_labels[0]
        else:
            net_name = net_id
        
        # Create netlist entry
        netlist[net_name] = {
            'pins': [{'component': comp, 'pin_number': pin['pin_number'], 
                     'pin_name': pin['pin_name']} for comp, pin in net_info['pins']],
            'power_labels': power_labels,
            'hierarchical_labels': hier_labels,
            'local_labels': local_labels,
            'merged_from': list(net_info['source_nets'])
        }
    
    return netlist

def parse_hierarchical_sheets(schematic, base_path):
    """
    Recursively parse hierarchical sheets and merge results into the main schematic.
    """
    all_schematics = [schematic]

    for sheet in schematic.sheets:
        sheet_file = next((prop.value for prop in sheet.properties if prop.key == "Sheetfile"), None)
        if sheet_file:
            child_path = os.path.join(base_path, sheet_file)
            try:
                child_schematic = Schematic().from_file(child_path)
                all_schematics.extend(parse_hierarchical_sheets(child_schematic, os.path.dirname(child_path)))
            except FileNotFoundError:
                print(f"Error: Unable to find hierarchical sheet file: {child_path}")

    return all_schematics


def analyze_schematic(schematic, base_path):
    """
    Analyze schematic and generate comprehensive information about components, pins, and connectivity.
    """
    # Parse all schematics, including hierarchical ones
    all_schematics = parse_hierarchical_sheets(schematic, base_path)

    # Merge data across all schematics
    all_labels = {'local': [], 'hierarchical': [], 'power': []}
    all_wire_connections = []
    all_component_pins = {}

    for sch in all_schematics:
        labels = parse_labels(sch)
        all_labels['local'].extend(labels['local'])
        all_labels['hierarchical'].extend(labels['hierarchical'])
        all_labels['power'].extend(labels['power'])

        all_wire_connections.extend(get_wire_connections(sch))

        component_pins = get_component_pins(sch)
        all_component_pins.update(component_pins)

    # Generate netlist
    netlist = calculate_pin_connectivity(all_component_pins, all_wire_connections, all_labels)

    # Print component information
    print("\n=== Components ===")
    for symbol in schematic.schematicSymbols:
        if symbol.libraryNickname != 'power':  # Skip power symbols as they're handled separately
            print(f"\nComponent: {symbol.libraryNickname}/{symbol.entryName}")
            print("Properties:")
            for prop in symbol.properties:
                print(f"  {prop.key}: {prop.value}")
            print(f"Position: ({symbol.position.X}, {symbol.position.Y}), Angle: {symbol.position.angle}")
            
            if hasattr(symbol, 'unit'):
                print(f"Unit: {symbol.unit}")

    # Print pin information with more details
    print("\n=== Pin Details ===")
    for component, pins in all_component_pins.items():
        print(f"\nComponent: {component}")
        for pin in pins:
            print(f"\n  Pin {pin['pin_number']} ({pin['pin_name']}):")
            print(f"    Position: ({pin['absolute_position'][0]:.2f}, {pin['absolute_position'][1]:.2f})")
            print(f"    Type: {pin['electrical_type']}")
            if 'alternatePins' in pin:
                print("    Alternate Functions:")
                for alt in pin['alternatePins']:
                    print(f"      - {alt['pinName']} ({alt['electricalType']})")

    # Print graphical items
    print("\n=== Graphical Items ===")
    for item in schematic.graphicalItems:
        if hasattr(item, 'type'):
            print(f"\nType: {item.type}")
            if item.type == 'wire':
                print(f"  Start: ({item.points[0].X}, {item.points[0].Y})")
                print(f"  End: ({item.points[1].X}, {item.points[1].Y})")

    # Print labels
    print("\n=== Labels ===")
    print("\nLocal Labels:")
    for label in all_labels['local']:
        print(f"  {label['text']} at ({label['position'][0]:.2f}, {label['position'][1]:.2f})")
        
    print("\nHierarchical Labels:")
    for label in all_labels['hierarchical']:
        print(f"  {label['text']} ({label['shape']}) at ({label['position'][0]:.2f}, {label['position'][1]:.2f})")
        
    print("\nPower Labels:")
    for label in all_labels['power']:
        print(f"  {label['text']} at ({label['position'][0]:.2f}, {label['position'][1]:.2f})")

    # Print netlist
    print("\n=== Netlist ===")
    for net_name, net_info in netlist.items():
        print(f"\n{net_name}:")
        
        # Print connected pins
        if 'pins' in net_info:
            for pin in net_info['pins']:
                print(f"  {pin['component']} Pin {pin['pin_number']} ({pin['pin_name']})")
        
        # Print power labels
        if 'power_labels' in net_info and net_info['power_labels']:
            print("  Power Labels:")
            for label in net_info['power_labels']:
                print(f"    {label}")
                
        # Print hierarchical labels
        if 'hierarchical_labels' in net_info and net_info['hierarchical_labels']:
            print("  Hierarchical Labels:")
            for label in net_info['hierarchical_labels']:
                print(f"    {label}")
                
        # Print local labels
        if 'local_labels' in net_info and net_info['local_labels']:
            print("  Local Labels:")
            for label in net_info['local_labels']:
                print(f"    {label}")
                
        # Print merged information
        if 'merged_from' in net_info:
            print("  Merged from nets:")
            for source_net in net_info['merged_from']:
                print(f"    {source_net}")

def main(file_path):
    # Load the schematic
    base_path = os.path.dirname(file_path)
    schematic = Schematic().from_file(file_path)
    # print(f"Loaded schematic: {schematic}")

    # Analyze the schematic
    analyze_schematic(schematic, base_path)

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python kiutils_test.py <schematic_file_path>")
    else:
        main(sys.argv[1])

/* End of file: kiutils_test.py */

/* Begin of file: labels_testing_output.txt */

=== Components ===

Component: Device/C
Properties:
  Reference: C11
  Value: C
  Footprint: Capacitor_SMD:C_0603_1608Metric
  Datasheet: ~
  Description: Unpolarized capacitor
Position: (133.35, 72.39), Angle: 0
Unit: 1

Component: Regulator_Linear/NCP1117-3.3_SOT223
Properties:
  Reference: U4
  Value: NCP1117-3.3_SOT223
  Footprint: Package_TO_SOT_SMD:SOT-223-3_TabPin2
  Datasheet: http://www.onsemi.com/pub_link/Collateral/NCP1117-D.PDF
  Description: 1A Low drop-out regulator, Fixed Output 3.3V, SOT-223
Position: (115.57, 68.58), Angle: 0
Unit: 1

Component: Device/R
Properties:
  Reference: R12
  Value: R
  Footprint: Resistor_SMD:R_0603_1608Metric
  Datasheet: ~
  Description: Resistor
Position: (146.05, 85.09), Angle: 0
Unit: 1

Component: Connector_Generic/Conn_01x04
Properties:
  Reference: J3
  Value: Conn_01x04
  Footprint: 
  Datasheet: ~
  Description: Generic connector, single row, 01x04, script generated (kicad-library-utils/schlib/autogen/connector/)
Position: (198.12, 74.93), Angle: 0
Unit: 1

Component: Connector_Generic/Conn_01x04
Properties:
  Reference: J4
  Value: Conn_01x04
  Footprint: 
  Datasheet: ~
  Description: Generic connector, single row, 01x04, script generated (kicad-library-utils/schlib/autogen/connector/)
Position: (198.12, 96.52), Angle: 0
Unit: 1

Component: Device/R
Properties:
  Reference: R9
  Value: R
  Footprint: Resistor_SMD:R_0603_1608Metric
  Datasheet: ~
  Description: Resistor
Position: (88.9, 85.09), Angle: 0
Unit: 1

Component: Device/R
Properties:
  Reference: R10
  Value: R
  Footprint: Resistor_SMD:R_0603_1608Metric
  Datasheet: ~
  Description: Resistor
Position: (88.9, 102.87), Angle: 0
Unit: 1

Component: Device/C
Properties:
  Reference: C9
  Value: C
  Footprint: Capacitor_SMD:C_0603_1608Metric
  Datasheet: ~
  Description: Unpolarized capacitor
Position: (99.06, 72.39), Angle: 0
Unit: 1

Component: Device/C
Properties:
  Reference: C12
  Value: C
  Footprint: 
  Datasheet: ~
  Description: Unpolarized capacitor
Position: (156.21, 99.06), Angle: 0
Unit: 1

Component: Device/C
Properties:
  Reference: C10
  Value: C
  Footprint: 
  Datasheet: ~
  Description: Unpolarized capacitor
Position: (105.41, 99.06), Angle: 0
Unit: 1

Component: Device/R
Properties:
  Reference: R11
  Value: R
  Footprint: Resistor_SMD:R_0603_1608Metric
  Datasheet: ~
  Description: Resistor
Position: (139.7, 102.87), Angle: 0
Unit: 1

=== Pin Details ===

Component: C11

  Pin 1 (~):
    Position: (133.35, 68.58)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (133.35, 76.20)
    Type: passive
    Alternate Functions:

Component: U4

  Pin 1 (GND):
    Position: (115.57, 76.20)
    Type: power_in
    Alternate Functions:

  Pin 2 (VO):
    Position: (123.19, 68.58)
    Type: power_out
    Alternate Functions:

  Pin 3 (VI):
    Position: (107.95, 68.58)
    Type: power_in
    Alternate Functions:

Component: #PWR034

  Pin 1 (~):
    Position: (201.93, 118.11)
    Type: power_in
    Alternate Functions:

Component: #PWR025

  Pin 1 (~):
    Position: (88.90, 106.68)
    Type: power_in
    Alternate Functions:

Component: R12

  Pin 1 (~):
    Position: (146.05, 81.28)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (146.05, 88.90)
    Type: passive
    Alternate Functions:

Component: #PWR036

  Pin 1 (~):
    Position: (201.93, 130.81)
    Type: power_in
    Alternate Functions:

Component: #PWR026

  Pin 1 (~):
    Position: (99.06, 68.58)
    Type: power_in
    Alternate Functions:

Component: #PWR032

  Pin 1 (~):
    Position: (139.70, 106.68)
    Type: power_in
    Alternate Functions:

Component: J3

  Pin 1 (Pin_1):
    Position: (193.04, 72.39)
    Type: passive
    Alternate Functions:

  Pin 2 (Pin_2):
    Position: (193.04, 74.93)
    Type: passive
    Alternate Functions:

  Pin 3 (Pin_3):
    Position: (193.04, 77.47)
    Type: passive
    Alternate Functions:

  Pin 4 (Pin_4):
    Position: (193.04, 80.01)
    Type: passive
    Alternate Functions:

Component: #PWR027

  Pin 1 (~):
    Position: (99.06, 80.01)
    Type: power_in
    Alternate Functions:

Component: J4

  Pin 1 (Pin_1):
    Position: (193.04, 93.98)
    Type: passive
    Alternate Functions:

  Pin 2 (Pin_2):
    Position: (193.04, 96.52)
    Type: passive
    Alternate Functions:

  Pin 3 (Pin_3):
    Position: (193.04, 99.06)
    Type: passive
    Alternate Functions:

  Pin 4 (Pin_4):
    Position: (193.04, 101.60)
    Type: passive
    Alternate Functions:

Component: R9

  Pin 1 (~):
    Position: (88.90, 81.28)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (88.90, 88.90)
    Type: passive
    Alternate Functions:

Component: #PWR035

  Pin 1 (~):
    Position: (201.93, 125.73)
    Type: power_in
    Alternate Functions:

Component: R10

  Pin 1 (~):
    Position: (88.90, 99.06)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (88.90, 106.68)
    Type: passive
    Alternate Functions:

Component: C9

  Pin 1 (~):
    Position: (99.06, 68.58)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (99.06, 76.20)
    Type: passive
    Alternate Functions:

Component: #PWR033

  Pin 1 (~):
    Position: (156.21, 102.87)
    Type: power_in
    Alternate Functions:

Component: C12

  Pin 1 (~):
    Position: (156.21, 95.25)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (156.21, 102.87)
    Type: passive
    Alternate Functions:

Component: #PWR028

  Pin 1 (~):
    Position: (105.41, 102.87)
    Type: power_in
    Alternate Functions:

Component: #PWR031

  Pin 1 (~):
    Position: (133.35, 80.01)
    Type: power_in
    Alternate Functions:

Component: #PWR030

  Pin 1 (~):
    Position: (133.35, 68.58)
    Type: power_in
    Alternate Functions:

Component: C10

  Pin 1 (~):
    Position: (105.41, 95.25)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (105.41, 102.87)
    Type: passive
    Alternate Functions:

Component: #PWR029

  Pin 1 (~):
    Position: (115.57, 80.01)
    Type: power_in
    Alternate Functions:

Component: R11

  Pin 1 (~):
    Position: (139.70, 99.06)
    Type: passive
    Alternate Functions:

  Pin 2 (~):
    Position: (139.70, 106.68)
    Type: passive
    Alternate Functions:

=== Graphical Items ===

Type: wire
  Start: (88.9, 88.9)
  End: (88.9, 95.25)

Type: wire
  Start: (146.05, 88.9)
  End: (142.24, 88.9)

Type: wire
  Start: (156.21, 57.15)
  End: (74.93, 57.15)

Type: wire
  Start: (88.9, 95.25)
  End: (88.9, 99.06)

Type: wire
  Start: (146.05, 68.58)
  End: (133.35, 68.58)

Type: wire
  Start: (142.24, 91.44)
  End: (146.05, 91.44)

Type: wire
  Start: (201.93, 130.81)
  End: (195.58, 130.81)

Type: wire
  Start: (146.05, 91.44)
  End: (146.05, 93.98)

Type: wire
  Start: (146.05, 93.98)
  End: (142.24, 93.98)

Type: wire
  Start: (88.9, 68.58)
  End: (88.9, 81.28)

Type: wire
  Start: (195.58, 139.7)
  End: (203.2, 139.7)

Type: wire
  Start: (139.7, 95.25)
  End: (139.7, 99.06)

Type: wire
  Start: (99.06, 80.01)
  End: (99.06, 76.2)

Type: wire
  Start: (142.24, 95.25)
  End: (147.32, 95.25)

Type: wire
  Start: (142.24, 88.9)
  End: (142.24, 91.44)

Type: wire
  Start: (146.05, 68.58)
  End: (146.05, 81.28)

Type: wire
  Start: (195.58, 125.73)
  End: (201.93, 125.73)

Type: wire
  Start: (88.9, 68.58)
  End: (99.06, 68.58)

Type: wire
  Start: (133.35, 80.01)
  End: (133.35, 76.2)

Type: wire
  Start: (123.19, 68.58)
  End: (133.35, 68.58)

Type: wire
  Start: (88.9, 95.25)
  End: (105.41, 95.25)

Type: wire
  Start: (142.24, 93.98)
  End: (142.24, 95.25)

Type: wire
  Start: (195.58, 130.81)
  End: (195.58, 132.08)

Type: wire
  Start: (99.06, 68.58)
  End: (107.95, 68.58)

Type: wire
  Start: (74.93, 57.15)
  End: (74.93, 121.92)

Type: wire
  Start: (74.93, 121.92)
  End: (147.32, 121.92)

Type: wire
  Start: (195.58, 118.11)
  End: (201.93, 118.11)

Type: wire
  Start: (139.7, 95.25)
  End: (142.24, 95.25)

Type: wire
  Start: (115.57, 80.01)
  End: (115.57, 76.2)

Type: wire
  Start: (147.32, 95.25)
  End: (147.32, 121.92)

Type: wire
  Start: (161.29, 88.9)
  End: (156.21, 88.9)

Type: wire
  Start: (156.21, 88.9)
  End: (156.21, 57.15)

Type: wire
  Start: (147.32, 95.25)
  End: (156.21, 95.25)

=== Labels ===

Local Labels:
  label_test_power3 at (193.04, 99.06)
  divider_1 at (95.25, 95.25)
  label_test_power2 at (195.58, 125.73)
  divider_1 at (193.04, 77.47)
  label_test_power1 at (195.58, 118.11)
  label_test_power4 at (193.04, 101.60)
  divider_2 at (161.29, 88.90)
  label_test_power3 at (195.58, 132.08)
  label_test_power4 at (195.58, 139.70)
  label_test_power2 at (193.04, 96.52)
  label_test_power1 at (193.04, 93.98)
  label_test_power1 at (203.20, 139.70)
  divider_2 at (193.04, 80.01)

Hierarchical Labels:
  5v_monitor (input) at (193.04, 72.39)
  5v_monitor (input) at (105.41, 95.25)
  3v3_monitor (input) at (156.21, 95.25)
  3v3_monitor (input) at (193.04, 74.93)

Power Labels:
  +5V at (201.93, 118.11)
  GND at (88.90, 106.68)
  GND at (201.93, 130.81)
  +5V at (99.06, 68.58)
  GND at (139.70, 106.68)
  GND at (99.06, 80.01)
  +3V3 at (201.93, 125.73)
  GND at (156.21, 102.87)
  GND at (105.41, 102.87)
  GND at (133.35, 80.01)
  +3V3 at (133.35, 68.58)
  GND at (115.57, 80.01)

=== Netlist ===

+3V3:
  #PWR035 Pin 1 (~)
  J4 Pin 2 (Pin_2)
  C11 Pin 1 (~)
  U4 Pin 2 (VO)
  R12 Pin 1 (~)
  #PWR030 Pin 1 (~)
  Power Labels:
    +3V3
  Local Labels:
    label_test_power2
  Merged from nets:
    NET_20
    NET_16
    NET_1

GND:
  #PWR027 Pin 1 (~)
  C9 Pin 2 (~)
  #PWR025 Pin 1 (~)
  R10 Pin 2 (~)
  #PWR028 Pin 1 (~)
  C10 Pin 2 (~)
  J4 Pin 3 (Pin_3)
  #PWR036 Pin 1 (~)
  U4 Pin 1 (GND)
  #PWR029 Pin 1 (~)
  C11 Pin 2 (~)
  #PWR031 Pin 1 (~)
  #PWR033 Pin 1 (~)
  C12 Pin 2 (~)
  #PWR032 Pin 1 (~)
  R11 Pin 2 (~)
  Power Labels:
    GND
  Local Labels:
    label_test_power3
  Merged from nets:
    NET_14
    NET_6
    NET_23
    NET_17
    NET_8
    NET_3
    NET_2
    NET_21
    NET_9

+5V:
  J4 Pin 1 (Pin_1)
  #PWR034 Pin 1 (~)
  U4 Pin 3 (VI)
  #PWR026 Pin 1 (~)
  R9 Pin 1 (~)
  C9 Pin 1 (~)
  Power Labels:
    +5V
  Local Labels:
    label_test_power1
  Merged from nets:
    NET_15
    NET_5
    NET_4

MERGED_NET_4:
  R12 Pin 2 (~)
  Merged from nets:
    NET_7

5v_monitor:
  J3 Pin 1 (Pin_1)
  R9 Pin 2 (~)
  R10 Pin 1 (~)
  C10 Pin 1 (~)
  Hierarchical Labels:
    5v_monitor
  Merged from nets:
    NET_10
    NET_19

3v3_monitor:
  C12 Pin 1 (~)
  J3 Pin 2 (Pin_2)
  Hierarchical Labels:
    3v3_monitor
  Merged from nets:
    NET_22
    NET_11

divider_1:
  J3 Pin 3 (Pin_3)
  Local Labels:
    divider_1
  Merged from nets:
    NET_12

divider_2:
  J3 Pin 4 (Pin_4)
  Local Labels:
    divider_2
  Merged from nets:
    NET_13

label_test_power4:
  J4 Pin 4 (Pin_4)
  Local Labels:
    label_test_power4
  Merged from nets:
    NET_18

MERGED_NET_10:
  R11 Pin 1 (~)
  Merged from nets:
    NET_24

/* End of file: labels_testing_output.txt */
